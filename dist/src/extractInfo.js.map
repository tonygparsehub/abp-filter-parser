{"version":3,"sources":["../../src/extractInfo.js"],"names":["console","log","discoverMatchingPrefix","bloomFilter","str","prefixLen","substringExists","i","length","sub","substring","cleaned","replace","exists","sitesToCheck","readFile","err","data","parserData","writeFileSync","Buffer","Uint8Array","toJSON","exceptionBloomFilter","readData","readFileSync","bloomData","forEach","s","cachedFilterDataJSM","JSON","stringify"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AAEAA,QAAQC,GAAR,CAAY,qCAAe,oFAAf,CAAZ;;AAGA,SAASC,sBAAT,CAAgCC,WAAhC,EAA6CC,GAA7C,EAAiE;AAAA,MAAfC,SAAe,uEAAH,CAAG;;AAC/D,MAAI,CAACF,YAAYG,eAAZ,CAA4BF,GAA5B,EAAiCC,SAAjC,CAAL,EAAkD;AAChDL,YAAQC,GAAR,CAAY,8BAAZ,EAA4CG,GAA5C;AACD;AACD,OAAK,IAAIG,IAAI,CAAb,EAAgBA,IAAIH,IAAII,MAAJ,GAAaH,SAAb,GAAyB,CAA7C,EAAgDE,GAAhD,EAAqD;AACnD,QAAIE,MAAML,IAAIM,SAAJ,CAAcH,CAAd,EAAiBA,IAAIF,SAArB,CAAV;AACA,QAAIM,UAAUF,IAAIG,OAAJ,CAAY,cAAZ,EAA4B,EAA5B,CAAd;AACA,QAAIT,YAAYU,MAAZ,CAAmBF,OAAnB,CAAJ,EAAiC;AAC/BX,cAAQC,GAAR,CAAY,kBAAZ,EAAgCQ,GAAhC,EAAqC,UAArC,EAAiDL,GAAjD;AACD;AACF;AACF;;AAED,IAAIU,eAAe,CACjB,wGADiB,CAAnB;;AAIA,aAAGC,QAAH,CAAY,0BAAZ,EAAwC,MAAxC,EAAgD,UAAUC,GAAV,EAAcC,IAAd,EAAoB;AAClE,MAAID,GAAJ,EAAS;AACP,WAAOhB,QAAQC,GAAR,CAAYe,GAAZ,CAAP;AACD;;AAED,MAAIE,aAAa,EAAjB;AACA,8BAAMD,IAAN,EAAYC,UAAZ;;AAEA;AACA,eAAGC,aAAH,CAAiB,sBAAjB,EAAyC,IAAIC,MAAJ,CAAW,IAAIC,UAAJ,CAAeH,WAAWf,WAAX,CAAuBmB,MAAvB,EAAf,CAAX,CAAzC;AACA,eAAGH,aAAH,CAAiB,+BAAjB,EAAkD,IAAIC,MAAJ,CAAW,IAAIC,UAAJ,CAAeH,WAAWK,oBAAX,CAAgCD,MAAhC,EAAf,CAAX,CAAlD;;AAEA,MAAIE,WAAW,aAAGC,YAAH,CAAgB,wBAAhB,CAAf;AACA,MAAIC,YAAY,+BAAgB,IAAIL,UAAJ,CAAeG,QAAf,CAAhB,CAAhB;AACAxB,UAAQC,GAAR,CAAYyB,SAAZ;AACA,MAAIvB,cAAc,+BAAgBuB,SAAhB,CAAlB;;AAEA;;;AAGA1B,UAAQC,GAAR,CAAY,SAAZ;AACAa,eAAaa,OAAb,CAAqB;AAAA,WACnBzB,uBAAuBC,WAAvB,CAAkC,0BAAlC,EAA8DyB,CAA9D,CADmB;AAAA,GAArB;;AAGA;AACA,SAAOV,WAAWf,WAAlB;AACA,SAAOe,WAAWK,oBAAlB;AACA,MAAIM,sBAAsB,2GAA2GC,KAAKC,SAAL,CAAeb,UAAf,CAA3G,GAAwI,KAAlK;AACA,eAAGC,aAAH,CAAiB,sBAAjB,EAAyCU,mBAAzC;AACD,CA7BD","file":"extractInfo.js","sourcesContent":["import {parse, getFingerprint} from './abp-filter-parser.js';\nimport fs from 'fs';\nimport {BloomFilter} from 'bloom-filter-js';\n\nconsole.log(getFingerprint('oauth.googleusercontent.com/gadgets/js/core:rpc:shindig.random:shindig.sha1.js?c=2'));\n\n\nfunction discoverMatchingPrefix(bloomFilter, str, prefixLen = 8) {\n  if (!bloomFilter.substringExists(str, prefixLen)) {\n    console.log('no substring exists for url:', str);\n  }\n  for (var i = 0; i < str.length - prefixLen + 1; i++) {\n    let sub = str.substring(i, i + prefixLen);\n    let cleaned = sub.replace(/^https?:\\/\\//, '');\n    if (bloomFilter.exists(cleaned)) {\n      console.log('bad-fingerprint:', sub, 'for url:', str);\n    }\n  }\n}\n\nlet sitesToCheck = [\n  'http://c.s-microsoft.com/en-ca/CMSImages/store_symbol.png?version=e2eecca5-4550-10c6-57b1-5114804a4c01',\n];\n\nfs.readFile('./test/data/easylist.txt', 'utf8', function (err,data) {\n  if (err) {\n    return console.log(err);\n  }\n\n  let parserData = {};\n  parse(data, parserData);\n\n  // Write out the bloom filter data files\n  fs.writeFileSync('dist/bloomFilterData', new Buffer(new Uint8Array(parserData.bloomFilter.toJSON())));\n  fs.writeFileSync('dist/exceptionBloomFilterData', new Buffer(new Uint8Array(parserData.exceptionBloomFilter.toJSON())));\n\n  let readData = fs.readFileSync('./dist/bloomFilterData');\n  let bloomData = new BloomFilter(new Uint8Array(readData));\n  console.log(bloomData);\n  let bloomFilter = new BloomFilter(bloomData);\n\n  //console.log('Number of filters processed: ', parserData.filterCount);\n\n\n  console.log('-------');\n  sitesToCheck.forEach(s =>\n    discoverMatchingPrefix(bloomFilter/*parserData.bloomFilter*/, s));\n\n  // WRite out the POD cached filter data JSM\n  delete parserData.bloomFilter;\n  delete parserData.exceptionBloomFilter;\n  let cachedFilterDataJSM = 'dump(\"######Loaded cached-rules.jsm\\\\n\");\\nthis.EXPORTED_SYMBOLS = [\"parserData\"];\\nthis.parserData = ' + JSON.stringify(parserData) + ';\\n';\n  fs.writeFileSync('cachedFilterData.jsm', cachedFilterDataJSM);\n});\n"]}